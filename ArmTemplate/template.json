{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_dependencyType": "function.windows.consumption"
  },
  "parameters": {
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "sii-email-notifications",
      "metadata": {
        "description": "Name of the resource group for the resource. It is recommended to put resources under same resource group for better tracking."
      }
    },
    "resourceGroupLocation": {
      "type": "string",
      "defaultValue": "westeurope",
      "metadata": {
        "description": "Location of the resource group. Resource groups could have different location than resources, however by default we use API versions from latest hybrid profile which support all locations for resource types we support."
      }
    },
    "resourceName": {
      "type": "string",
      "defaultValue": "sii-email-notifications",
      "metadata": {
        "description": "Name of the main resource to be created by this template."
      }
    },
    "resourceLocation": {
      "type": "string",
      "defaultValue": "[parameters('resourceGroupLocation')]",
      "metadata": {
        "description": "Location of the resource. By default use resource group's location, unless the resource provider is not supported there."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "name": "[parameters('resourceGroupName')]",
      "location": "[parameters('resourceGroupLocation')]",
      "apiVersion": "2019-10-01"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "[concat(parameters('resourceGroupName'), 'Deployment', uniqueString(concat(parameters('resourceName'), subscription().subscriptionId)))]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "apiVersion": "2019-10-01",
      "dependsOn": [
        "[parameters('resourceGroupName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "parameters": {
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "resourceGroupLocation": {
            "value": "[parameters('resourceGroupLocation')]"
          },
          "resourceName": {
            "value": "[parameters('resourceName')]"
          },
          "resourceLocation": {
            "value": "[parameters('resourceLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "resourceGroupName": {
              "type": "string"
            },
            "resourceGroupLocation": {
              "type": "string"
            },
            "resourceName": {
              "type": "string"
            },
            "resourceLocation": {
              "type": "string"
            }
          },
          "variables": {
            "workflow_name": "EmailProcessor",
            "connections_office365": "office365",
            "blob_connection": "['azureblob']",
            "storage_name": "[toLower(concat('storage', uniqueString(concat(parameters('resourceName'), subscription().subscriptionId))))]",
            "create_blob_path": "[concat('/v2/datasets/@{encodeURIComponent(encodeURIComponent(''', variables('storage_name'), '''))}/files')]",
            "storage_ResourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Storage/storageAccounts/', variables('storage_name'))]",
            "function_ResourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Web/sites/', parameters('resourceName'))]",
            "office_propertyApiId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('resourceLocation'), '/managedApis/office365')]",
            "blob_propertyApiId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('resourceLocation'), '/managedApis/azureblob')]"
          },
          "resources": [
            {
              "location": "[parameters('resourceLocation')]",
              "name": "[variables('storage_name')]",
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2017-10-01",
              "tags": {
                "[concat('hidden-related:', concat('/providers/Microsoft.Web/sites/', parameters('resourceName')))]": "empty"
              },
              "properties": {
                "supportsHttpsTrafficOnly": true
              },
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "Storage"
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[variables('connections_office365')]",
              "location": "[parameters('resourceLocation')]",
              "kind": "V1",
              "properties": {
                "displayName": "Office365",
                "customParameterValues": {},
                "api": {
                  "id": "[variables('office_propertyApiId')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[variables('blob_connection')]",
              "location": "[parameters('resourceLocation')]",
              "kind": "V1",
              "properties": {
                "displayName": "BlobConnection",
                "customParameterValues": {},
                "api": {
                  "id": "[variables('blob_propertyApiId')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[variables('workflow_name')]",
              "location": "[parameters('resourceLocation')]",
              "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('blob_connection'))]",
                "[resourceId('Microsoft.Web/connections', variables('connections_office365'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "defaultValue": {},
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "When_a_new_email_arrives_in_a_shared_mailbox_(V2)": {
                      "recurrence": {
                        "frequency": "Second",
                        "interval": 20
                      },
                      "splitOn": "@triggerBody()?['value']",
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['office365']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/v2/SharedMailbox/Mail/OnNewEmail",
                        "queries": {
                          "folderId": "Inbox",
                          "hasAttachments": false,
                          "importance": "Any",
                          "includeAttachments": false,
                          "mailboxAddress": "mail_testing_example@sii.pl"
                        }
                      }
                    }
                  },
                  "actions": {
                    "Create_blob_(V2)": {
                      "inputs": {
                        "body": "@{triggerBody()?['subject']}&&&###$$$@{triggerBody()?['body']}",
                        "headers": {
                          "ReadFileMetadataFromServer": true
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azureblob']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "[variables('create_blob_path')]",
                        "queries": {
                          "folderPath": "emails",
                          "name": "@variables('orderid')",
                          "queryParametersSingleEncoded": true
                        }
                      },
                      "runAfter": {
                        "Initialize_orderId": [
                          "Succeeded"
                        ]
                      },
                      "runtimeConfiguration": {
                        "contentTransfer": {
                          "transferMode": "Chunked"
                        }
                      },
                      "type": "ApiConnection"
                    },
                    "Initialize_orderId": {
                      "inputs": {
                        "variables": [
                          {
                            "name": "orderid",
                            "type": "string",
                            "value": "@{substring(triggerBody()?['Subject'], add(9, lastIndexOf(triggerBody()?['Subject'], 'ORDERID: ')), 10)}"
                          }
                        ]
                      },
                      "runAfter": {},
                      "type": "InitializeVariable"
                    }
                  },
                  "outputs": {}
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azureblob": {
                        "connectionId": "[resourceId('Microsoft.Web/connections', variables('blob_connection'))]",
                        "connectionName": "azureblob",
                        "id": "[variables('blob_propertyApiId')]"
                      },
                      "office365": {
                        "connectionId": "[resourceId('Microsoft.Web/connections', variables('connections_office365'))]",
                        "connectionName": "office365",
                        "id": "[variables('office_propertyApiId')]"
                      }
                    }
                  }
                }
              }
            },
            {
              "location": "[parameters('resourceLocation')]",
              "name": "[parameters('resourceName')]",
              "type": "Microsoft.Web/sites",
              "apiVersion": "2015-08-01",
              "dependsOn": [
                "[variables('storage_ResourceId')]"
              ],
              "kind": "functionapp",
              "properties": {
                "name": "[parameters('resourceName')]",
                "kind": "functionapp",
                "httpsOnly": true,
                "reserved": false
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "resources": [
                {
                  "name": "appsettings",
                  "type": "config",
                  "apiVersion": "2015-08-01",
                  "dependsOn": [
                    "[variables('function_ResourceId')]"
                  ],
                  "properties": {
                    "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storage_name'), ';AccountKey=', listKeys(variables('storage_ResourceId'), '2017-10-01').keys[0].value, ';EndpointSuffix=', 'core.windows.net')]",
                    "WEBSITE_CONTENTSHARE": "[toLower(parameters('resourceName'))]",
                    "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storage_name'), ';AccountKey=', listKeys(variables('storage_ResourceId'), '2017-10-01').keys[0].value, ';EndpointSuffix=', 'core.windows.net')]",
                    "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storage_name'), ';AccountKey=', listKeys(variables('storage_ResourceId'), '2017-10-01').keys[0].value, ';EndpointSuffix=', 'core.windows.net')]",
                    "FUNCTIONS_EXTENSION_VERSION": "~3",
                    "FUNCTIONS_WORKER_RUNTIME": "dotnet"
                  }
                }
              ]
            }
          ]
        }
      }
    }
  ]
}